{"ast":null,"code":"import _objectSpread from \"/Users/rafaelarmelin/Desktop/Boolean /REACT/boolean-uk-react-gmail-props/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/rafaelarmelin/Desktop/Boolean /REACT/boolean-uk-react-gmail-props/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/rafaelarmelin/Desktop/Boolean /REACT/boolean-uk-react-gmail-props/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport initialEmails from './data/emails';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar getReadEmails = function getReadEmails(emails) {\n  return emails.filter(function (email) {\n    return !email.read;\n  });\n};\n\nvar getStarredEmails = function getStarredEmails(emails) {\n  return emails.filter(function (email) {\n    return email.starred;\n  });\n};\n\nfunction App() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(initialEmails),\n      _useState2 = _slicedToArray(_useState, 2),\n      emails = _useState2[0],\n      setEmails = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hideRead = _useState4[0],\n      setHideRead = _useState4[1];\n\n  var _useState5 = useState('inbox'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentTab = _useState6[0],\n      setCurrentTab = _useState6[1];\n\n  var unreadEmails = emails.filter(function (email) {\n    return !email.read;\n  });\n  var starredEmails = emails.filter(function (email) {\n    return email.starred;\n  });\n\n  var toggleStar = function toggleStar(targetEmail) {\n    var updatedEmails = function updatedEmails(emails) {\n      return emails.map(function (email) {\n        return email.id === targetEmail.id ? _objectSpread(_objectSpread({}, email), {}, {\n          starred: !email.starred\n        }) : email;\n      });\n    };\n\n    setEmails(updatedEmails);\n  };\n\n  var toggleRead = function toggleRead(targetEmail) {\n    var updatedEmails = function updatedEmails(emails) {\n      return emails.map(function (email) {\n        return email.id === targetEmail.id ? _objectSpread(_objectSpread({}, email), {}, {\n          read: !email.read\n        }) : email;\n      });\n    };\n\n    setEmails(updatedEmails);\n  };\n\n  var filteredEmails = emails;\n  if (hideRead) filteredEmails = getReadEmails(filteredEmails);\n  if (currentTab === 'starred') filteredEmails = getStarredEmails(filteredEmails);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"menu-icon\",\n          focusable: \"false\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_1x_r2.png\",\n          alt: \"gmail logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search-bar\",\n          placeholder: \"Search mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"left-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"inbox-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"item \".concat(currentTab === 'inbox' ? 'active' : ''),\n          onClick: function onClick() {\n            return setCurrentTab('inbox');\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Inbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count\",\n            children: unreadEmails.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"item \".concat(currentTab === 'starred' ? 'active' : ''),\n          onClick: function onClick() {\n            return setCurrentTab('starred');\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Starred\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count\",\n            children: starredEmails.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"item toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"hide-read\",\n            children: \"Hide read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"hide-read\",\n            type: \"checkbox\",\n            checked: hideRead,\n            onChange: function onChange(e) {\n              return setHideRead(e.target.checked);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"emails\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredEmails.map(function (email, index) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"email \".concat(email.read ? 'read' : 'unread'),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"select-checkbox\",\n                type: \"checkbox\",\n                checked: email.read,\n                onChange: function onChange() {\n                  return toggleRead(email);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"star\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"star-checkbox\",\n                type: \"checkbox\",\n                checked: email.starred,\n                onChange: function onChange() {\n                  return toggleStar(email);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sender\",\n              children: email.sender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: email.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, _this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"w3myxsnSCKO2qFU8WMxVKPfEG30=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rafaelarmelin/Desktop/Boolean /REACT/boolean-uk-react-gmail-props/src/App.js"],"names":["useState","initialEmails","getReadEmails","emails","filter","email","read","getStarredEmails","starred","App","setEmails","hideRead","setHideRead","currentTab","setCurrentTab","unreadEmails","starredEmails","toggleStar","targetEmail","updatedEmails","map","id","toggleRead","filteredEmails","length","e","target","checked","index","sender","title"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\nimport initialEmails from './data/emails'\n\nimport './App.css'\n\nconst getReadEmails = emails => emails.filter(email => !email.read)\n\nconst getStarredEmails = emails => emails.filter(email => email.starred)\n\nfunction App() {\n  const [emails, setEmails] = useState(initialEmails)\n  const [hideRead, setHideRead] = useState(false)\n  const [currentTab, setCurrentTab] = useState('inbox')\n\n  const unreadEmails = emails.filter(email => !email.read)\n  const starredEmails = emails.filter(email => email.starred)\n\n  const toggleStar = targetEmail => {\n    const updatedEmails = emails =>\n      emails.map(email =>\n        email.id === targetEmail.id\n          ? { ...email, starred: !email.starred }\n          : email\n      )\n    setEmails(updatedEmails)\n  }\n\n  const toggleRead = targetEmail => {\n    const updatedEmails = emails =>\n      emails.map(email =>\n        email.id === targetEmail.id ? { ...email, read: !email.read } : email\n      )\n    setEmails(updatedEmails)\n  }\n\n  let filteredEmails = emails\n\n  if (hideRead) filteredEmails = getReadEmails(filteredEmails)\n\n  if (currentTab === 'starred')\n    filteredEmails = getStarredEmails(filteredEmails)\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <div className=\"left-menu\">\n          <svg className=\"menu-icon\" focusable=\"false\" viewBox=\"0 0 24 24\">\n            <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"></path>\n          </svg>\n\n          <img\n            src=\"https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_1x_r2.png\"\n            alt=\"gmail logo\"\n          />\n        </div>\n\n        <div className=\"search\">\n          <input className=\"search-bar\" placeholder=\"Search mail\" />\n        </div>\n      </header>\n      <nav className=\"left-menu\">\n        <ul className=\"inbox-list\">\n          <li\n            className={`item ${currentTab === 'inbox' ? 'active' : ''}`}\n            onClick={() => setCurrentTab('inbox')}\n          >\n            <span className=\"label\">Inbox</span>\n            <span className=\"count\">{unreadEmails.length}</span>\n          </li>\n          <li\n            className={`item ${currentTab === 'starred' ? 'active' : ''}`}\n            onClick={() => setCurrentTab('starred')}\n          >\n            <span className=\"label\">Starred</span>\n            <span className=\"count\">{starredEmails.length}</span>\n          </li>\n\n          <li className=\"item toggle\">\n            <label htmlFor=\"hide-read\">Hide read</label>\n            <input\n              id=\"hide-read\"\n              type=\"checkbox\"\n              checked={hideRead}\n              onChange={e => setHideRead(e.target.checked)}\n            />\n          </li>\n        </ul>\n      </nav>\n      <main className=\"emails\">\n        <ul>\n          {filteredEmails.map((email, index) => (\n            <li\n              key={index}\n              className={`email ${email.read ? 'read' : 'unread'}`}\n            >\n              <div className=\"select\">\n                <input\n                  className=\"select-checkbox\"\n                  type=\"checkbox\"\n                  checked={email.read}\n                  onChange={() => toggleRead(email)}\n                />\n              </div>\n              <div className=\"star\">\n                <input\n                  className=\"star-checkbox\"\n                  type=\"checkbox\"\n                  checked={email.starred}\n                  onChange={() => toggleStar(email)}\n                />\n              </div>\n              <div className=\"sender\">{email.sender}</div>\n              <div className=\"title\">{email.title}</div>\n            </li>\n          ))}\n        </ul>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}