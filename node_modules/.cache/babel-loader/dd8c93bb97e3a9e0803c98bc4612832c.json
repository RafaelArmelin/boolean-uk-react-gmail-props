{"ast":null,"code":"import _objectSpread from \"/Users/rafaelarmelin/Desktop/Boolean /REACT/boolean-uk-react-gmail-props/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/rafaelarmelin/Desktop/Boolean /REACT/boolean-uk-react-gmail-props/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/rafaelarmelin/Desktop/Boolean /REACT/boolean-uk-react-gmail-props/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport initialEmails from \"./data/emails\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport HideRead from \"./components/lelft-menu/HideRead\";\nimport Stared from \"./components/lelft-menu/Starred\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar getReadEmails = function getReadEmails(emails) {\n  return emails.filter(function (email) {\n    return !email.read;\n  });\n};\n\nvar getStarredEmails = function getStarredEmails(emails) {\n  return emails.filter(function (email) {\n    return email.starred;\n  });\n};\n\nfunction App() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(initialEmails),\n      _useState2 = _slicedToArray(_useState, 2),\n      emails = _useState2[0],\n      setEmails = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hideRead = _useState4[0],\n      setHideRead = _useState4[1];\n\n  var _useState5 = useState(\"inbox\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentTab = _useState6[0],\n      setCurrentTab = _useState6[1];\n\n  var unreadEmails = emails.filter(function (email) {\n    return !email.read;\n  });\n  var starredEmails = emails.filter(function (email) {\n    return email.starred;\n  });\n\n  var toggleStar = function toggleStar(targetEmail) {\n    var updatedEmails = function updatedEmails(emails) {\n      return emails.map(function (email) {\n        return email.id === targetEmail.id ? _objectSpread(_objectSpread({}, email), {}, {\n          starred: !email.starred\n        }) : email;\n      });\n    };\n\n    setEmails(updatedEmails);\n  };\n\n  var toggleRead = function toggleRead(targetEmail) {\n    var updatedEmails = function updatedEmails(emails) {\n      return emails.map(function (email) {\n        return email.id === targetEmail.id ? _objectSpread(_objectSpread({}, email), {}, {\n          read: !email.read\n        }) : email;\n      });\n    };\n\n    setEmails(updatedEmails);\n  };\n\n  var filteredEmails = emails;\n  if (hideRead) filteredEmails = getReadEmails(filteredEmails);\n  if (currentTab === \"starred\") filteredEmails = getStarredEmails(filteredEmails);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"left-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"inbox-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"item \".concat(currentTab === \"inbox\" ? \"active\" : \"\"),\n          onClick: function onClick() {\n            return setCurrentTab(\"inbox\");\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Inbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count\",\n            children: unreadEmails.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stared, {\n          starredEmails: starredEmails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HideRead, {\n          name: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"emails\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredEmails.map(function (email, index) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"email \".concat(email.read ? \"read\" : \"unread\"),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"select-checkbox\",\n                type: \"checkbox\",\n                checked: email.read,\n                onChange: function onChange() {\n                  return toggleRead(email);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"star\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"star-checkbox\",\n                type: \"checkbox\",\n                checked: email.starred,\n                onChange: function onChange() {\n                  return toggleStar(email);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sender\",\n              children: email.sender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: email.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, _this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pry+YDkDjcgMWpzrQZcQjSjea9w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rafaelarmelin/Desktop/Boolean /REACT/boolean-uk-react-gmail-props/src/App.js"],"names":["useState","initialEmails","Header","HideRead","Stared","getReadEmails","emails","filter","email","read","getStarredEmails","starred","App","setEmails","hideRead","setHideRead","currentTab","setCurrentTab","unreadEmails","starredEmails","toggleStar","targetEmail","updatedEmails","map","id","toggleRead","filteredEmails","name","length","index","sender","title"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nimport initialEmails from \"./data/emails\";\n\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport HideRead from \"./components/lelft-menu/HideRead\";\nimport Stared from \"./components/lelft-menu/Starred\";\n\nconst getReadEmails = (emails) => emails.filter((email) => !email.read);\n\nconst getStarredEmails = (emails) => emails.filter((email) => email.starred);\n\nfunction App() {\n  const [emails, setEmails] = useState(initialEmails);\n  const [hideRead, setHideRead] = useState(false);\n  const [currentTab, setCurrentTab] = useState(\"inbox\");\n\n  const unreadEmails = emails.filter((email) => !email.read);\n  const starredEmails = emails.filter((email) => email.starred);\n\n  const toggleStar = (targetEmail) => {\n    const updatedEmails = (emails) =>\n      emails.map((email) =>\n        email.id === targetEmail.id\n          ? { ...email, starred: !email.starred }\n          : email\n      );\n    setEmails(updatedEmails);\n  };\n\n  const toggleRead = (targetEmail) => {\n    const updatedEmails = (emails) =>\n      emails.map((email) =>\n        email.id === targetEmail.id ? { ...email, read: !email.read } : email\n      );\n    setEmails(updatedEmails);\n  };\n\n  let filteredEmails = emails;\n\n  if (hideRead) filteredEmails = getReadEmails(filteredEmails);\n\n  if (currentTab === \"starred\")\n    filteredEmails = getStarredEmails(filteredEmails);\n\n  return (\n    <div className=\"app\">\n      <Header name={name} />\n      <nav className=\"left-menu\">\n        <ul className=\"inbox-list\">\n          <li\n            className={`item ${currentTab === \"inbox\" ? \"active\" : \"\"}`}\n            onClick={() => setCurrentTab(\"inbox\")}\n          >\n            <span className=\"label\">Inbox</span>\n            <span className=\"count\">{unreadEmails.length}</span>\n          </li>\n          <Stared starredEmails={starredEmails} />\n          <HideRead name={name} />\n        </ul>\n      </nav>\n      <main className=\"emails\">\n        <ul>\n          {filteredEmails.map((email, index) => (\n            <li\n              key={index}\n              className={`email ${email.read ? \"read\" : \"unread\"}`}\n            >\n              <div className=\"select\">\n                <input\n                  className=\"select-checkbox\"\n                  type=\"checkbox\"\n                  checked={email.read}\n                  onChange={() => toggleRead(email)}\n                />\n              </div>\n              <div className=\"star\">\n                <input\n                  className=\"star-checkbox\"\n                  type=\"checkbox\"\n                  checked={email.starred}\n                  onChange={() => toggleStar(email)}\n                />\n              </div>\n              <div className=\"sender\">{email.sender}</div>\n              <div className=\"title\">{email.title}</div>\n            </li>\n          ))}\n        </ul>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}